# result is:
# p:  25976821395180198476743068529695931880319978338480531691610415661361401931383097486637715966519433444600807436568625937170979947873109031178446327528398133145852049984204078014724520864936860101756642039506218037953918533626073449723898770930566216765820733105518446966884286106440581562933325551827323765319957510225607773424265969039937937742979396790704924716173393298279572575415013924464004992696906463318297071939524223942163524421603677237782079779000276716830833229497904981348154148071553210843011778941555658376873636449024640227467452726636452188197668389647887691103200225867892463479256186176578143767139
# phi:  717112095603796567459186675289085366666353307185490838112863469094236267064115095991318914077602556259092980640688481403957314611778356606590630923532172479459611664646123086735269849900884971954345014685854404613997971637479029358038777738612361656852669461942050483312357280227014477564862706358220265665684528484015675504406503642979068426662169208465726918109620002278730736582232507060863895239183614060352797915536803003766379326547455483805121183179622890875770347638754708633078401281869506937834987783549345444254985895168452303800618033133228421198570487293819512418570281720722209228656211732340633248821545455434526020219993448433161577924310713274492308880980201383455099068523889685814249984405228701261362322849010066061735730677759413176126218371697461804244223691718360889545379422310644032850527454954430399464008354605817751120332049727333236775612725796063214763643279037588348308029512810222878558640840327396290806166411185700201504793738012341049398754615206106830491776231922394409703805288118348906695627960712731716809910376240824840871853352040027553777979523572729198044353715070317050046544480024814033237158618785486967163990292235755751019210011467476450044348447769537191275783398228330973644587834948
# q:  27605844637206123282365368266418414490783159709786016035962764759078992540909426425405085663430202920502543886474583189795540626725052660622042231382059734513979163968742885314941389546369638383616783370156539696163142260612881872970764962829190710418319853457587970524661913509645654505724641474005151409502619326034959972325147682714200899207495143506390740638363467361368301365504608630260859776912592195031536476367664699673298357787807255866857471820031544288470873756667803333148752770390468046424569847612768834096179110732081807091215707606221508748438513288164953527598697891287426751502770811278403981975747
# d:  -144041741711222332637025396241901822890823121836364212474140328473328443774234571671418010969644018655029983019577081178596732983649698435527397736810923882991383919822414274589668314144609148584875685083610592220252213232765826059618573785054139323600539249538507294540852819581433672317375721600006280074203444359119006856279768893238574496369696438046337628362528612997195651561232719272307434226904086172551142587547896222615936302465335672807888906348727523925242852988641026968671804850306394698104273603958734507654800102598494073992269035631258967249919616319572761363474971215825978642385680932061768101797256883521371141953034068620384500538560297687495868808600078902174388881670636187559070247260485384186102104429320361164482493227368126631529144432076924289959426898969749954223955547481534370637110997101181344561762149320704104181577598953425007689002638545850071854808735908735722067334490541736331741549781376471989443709273186880044137038692146336536220535052788092074959087878862724873115047878492911561526179814071782356837903172144501857046204091219538927902304384520368756016538326520677688127511352900600453690799945949496474293098069899316244356880549780396722284874238467402956893883037891233180295975620783
# pt: bytearray(b'\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00L30n4rd_M19ht_B3_0ld_But_5t1ll_Cunn1n9')

e = 65537
N = 717112095603796567459186675289085366666353307185490838112863469094236267064115095991318914077602556259092980640688481403957314611778356606590630923532172479459611664646123086735269849900884971954345014685854404613997971637479029358038777738612361656852669461942050483312357280227014477564862706358220265665684528484015675504406503642979068426662169208465726918109620002278730736582232507060863895239183614060352797915536803003766379326547455483805121183179622890875770347638754708633078401281869506937834987783549345444254985895168452303800618033133228421198570487293819512418570281720722209228656211732340633248821599038100558406541752556869957692270681816412540575428707774563875539462996182209726292786035178337626465674172053275188702251252357574867926706930607919671904054905671307852875045332721950531335900880364093157198125415400056706443026713461092993702796866382626321181134825237204434544098170777248711033815662904232551373912160599351955643630688486881346494419969742967490139650172842016964428670057727847565045461509019920640425372258450235773976492903639059374783281230558894906358850621988779071303812061651368357729631671532668073611308975396088608980146647649154262885567149667654346594998380255328428626713577833
message = 264534650266105599806294021070614230595616525906055753733761719275657774871470140716982224248591199930143393536112109666634675797148303913100693807661342308555939532608805045967956383107966177699787072449920253895221304428097068425393162931376216861878624593868623806403407463235780480244748078241725783430590495340799442724682566190632050547591341323688977303501641184951367816544042508488494475499053434594879307412981360853044625476334885351799592910757244150652389450722949077045473797563111265917765609352389143140723484112393593857707133580845664021986531624981054608271428875875563984105161439320613210497589395084708184226072788120184187653476835755855473119021530837541643055886076234084972648710196573106365229553050082479821148344623946637161759377216826589918124913366632162149006381730172591022803075404878808812491011198771709647073141166756215048339139472055570431392757757451548399461407884147879477545478028761274883498759069612591413321559799628662445755512999075034030583300601150472018816567707188341247953317752726136118637093294082860094619153110729803351873487926928582227569644123629745035652271651297427589546895153366652555770618092604114490238897158877913219257369176494787069733353644783317504411523314154
p
p_a=list(p)
possible_nums = []

def flip(c):
    if c == "1":
        return "0"
    else:
        return "1"

def egcd(a, b):
    x,y, u,v = 0,1, 1,0
    while a != 0:
        q, r = b//a, b%a
        m, n = x-u*q, y-v*q
        b,a, x,y, u,v = a,r, u,v, m,n
        gcd = b
    return gcd, x, y

for i in range(2048):
    for ii in range(2048):
        if ii <= i:
            continue
        new = p_a.copy()
        new[i] = flip(p_a[i])
        new[ii] = flip(p_a[ii])
        real_p = int("".join(new),2)
        if N%real_p == 0:
            possible_nums.append(real_p)

print(f"found {len(possible_nums)} possible p's")
print(len(possible_nums))
for pp in possible_nums:
    print("p:  " + str(pp))
    q = N//pp
    print("q:  " + str(q))
    phi = (pp - 1) * (q - 1)
    print("phi:  " + str(phi))

    gcd, a, b = egcd(e, phi)
    d = a

    print("d:  " + str(d))
    pt = pow(message, d, N)
    print("Possible flag:")
    print("pt: " + str(bytearray.fromhex('{:0192x}'.format(pt))))